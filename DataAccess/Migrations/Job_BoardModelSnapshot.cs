// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(Job_Board))]
    partial class Job_BoardModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Leading tech company",
                            Name = "TechCorp",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Startup for innovation",
                            Name = "InnovateX",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalaryMax")
                        .HasColumnType("int");

                    b.Property<int>("SalaryMin")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Description = "Develop web apps",
                            LSocation = "Kyiv",
                            SalaryMax = 4000,
                            SalaryMin = 2000,
                            Title = "Software Developer"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            Description = "Test software",
                            LSocation = "Lviv",
                            SalaryMax = 3000,
                            SalaryMin = 1500,
                            Title = "QA Engineer"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 2,
                            Description = "Design interfaces",
                            LSocation = "Remote",
                            SalaryMax = 3500,
                            SalaryMin = 1800,
                            Title = "UI/UX Designer"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice@company.com",
                            Name = "Alice HR",
                            PasswordHash = "hash1",
                            ProfileInfo = "HR Manager",
                            Role = "HR"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bob@company.com",
                            Name = "Bob HR",
                            PasswordHash = "hash2",
                            ProfileInfo = "HR Specialist",
                            Role = "HR"
                        },
                        new
                        {
                            Id = 3,
                            Email = "charlie@mail.com",
                            Name = "Charlie Candidate",
                            PasswordHash = "hash3",
                            ProfileInfo = "Software Developer",
                            Role = "Candidate"
                        },
                        new
                        {
                            Id = 4,
                            Email = "diana@mail.com",
                            Name = "Diana Candidate",
                            PasswordHash = "hash4",
                            ProfileInfo = "QA Engineer",
                            Role = "Candidate"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Company", b =>
                {
                    b.HasOne("DataAccess.Entities.User", "Owner")
                        .WithMany("OwnedCompanies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DataAccess.Entities.Job", b =>
                {
                    b.HasOne("DataAccess.Entities.Company", "Company")
                        .WithMany("Jobs")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("DataAccess.Entities.Company", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("DataAccess.Entities.User", b =>
                {
                    b.Navigation("OwnedCompanies");
                });
#pragma warning restore 612, 618
        }
    }
}
